// Generated by CoffeeScript 1.6.3
(function() {
  define(function(requiere, exports, module) {
    var Asteroid;
    Asteroid = (function() {
      var hasCollided;

      function Asteroid(x, y, r, type, orientation, rotation, speedX, speedY) {
        this.x = x;
        this.y = y;
        this.r = r;
        this.type = type;
        this.orientation = orientation != null ? orientation : 0;
        this.rotation = rotation != null ? rotation : 0;
        this.speedX = speedX != null ? speedX : 0;
        this.speedY = speedY != null ? speedY : 0;
      }

      Asteroid.prototype.setPos = function(x, y) {
        this.x = x;
        this.y = y;
      };

      Asteroid.prototype.setSize = function(r) {
        this.r = r;
      };

      Asteroid.prototype.setOrientation = function(orientation) {
        this.orientation = orientation;
      };

      Asteroid.prototype.setType = function(type) {
        this.type = type;
      };

      Asteroid.prototype.setSpeed = function(speedX, speedY) {
        this.speedX = speedX;
        this.speedY = speedY;
      };

      Asteroid.prototype.move = function(dt) {
        this.x = this.x + dt * speedX;
        this.y = this.y + dt * speedy;
        return this.orientation = this.orientation + dt * this.rotation;
      };

      Asteroid.prototype.renderVector = function(c) {
        c.beginPath();
        c.strokeStyle = "brown";
        c.arc(this.x, this.y, this.r, 0, Math.PI * 2, true);
        return c.stroke();
      };

      hasCollided = function(ast1, ast2) {
        if (Math.sqrt((ast1.x - ast2.x) ^ 2 + (ast1.y - ast2.y) ^ 2) < (ast1.r + ast2.r)) {
          return true;
        } else {
          return false;
        }
      };

      return Asteroid;

    })();
    return {
      hasCollided: hasCollided,
      Asteroid: Asteroid
    };
  });

}).call(this);
