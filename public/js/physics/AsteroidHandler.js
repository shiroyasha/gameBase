// Generated by CoffeeScript 1.6.3
(function() {
  define(function(require, exports, module) {
    var AsteroidHandler, MASS, MAX_DISTANCE, MAX_ROTATION, MIN_DISTANCE, NUM_OF_ASTEROIDS, RADIUS, RADIUS_VARIATION, SPEED, createNewAsteroid, magnitude;
    NUM_OF_ASTEROIDS = 200;
    MAX_DISTANCE = 2000;
    MIN_DISTANCE = 1000;
    SPEED = 50;
    RADIUS = 70;
    RADIUS_VARIATION = 60;
    MASS = 100;
    MAX_ROTATION = 0.002;
    AsteroidHandler = {};
    AsteroidHandler.updateAsteroids = function(model) {
      var aster, centerX, centerY, i, liveAsteroids, _i, _j, _len, _ref, _ref1, _results;
      centerX = model.me.position.x;
      centerY = model.me.position.y;
      liveAsteroids = [];
      _ref = model.asteroids;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        aster = _ref[_i];
        if (magnitude(aster.position.x - centerX, aster.position.y - centerY) < MAX_DISTANCE) {
          liveAsteroids.push(aster);
        }
      }
      model.asteroids = liveAsteroids;
      _results = [];
      for (i = _j = _ref1 = model.asteroids.length; _j < NUM_OF_ASTEROIDS; i = _j += 1) {
        _results.push(model.asteroids.push(createNewAsteroid(model)));
      }
      return _results;
    };
    createNewAsteroid = function(model) {
      var cX, cY, newAsteroid, _ref;
      newAsteroid = {};
      newAsteroid.position = {};
      newAsteroid.velocity = {};
      cX = model.me.position.x;
      cY = model.me.position.y;
      while (true) {
        newAsteroid.position.x = MAX_DISTANCE - Math.random() * MAX_DISTANCE * 2;
        newAsteroid.position.y = MAX_DISTANCE - Math.random() * MAX_DISTANCE * 2;
        if ((MIN_DISTANCE < (_ref = magnitude(newAsteroid.position.x - cX, newAsteroid.position.y - cY)) && _ref < MAX_DISTANCE)) {
          break;
        }
      }
      newAsteroid.velocity.x = SPEED - Math.random() * 2 * SPEED;
      newAsteroid.velocity.y = SPEED - Math.random() * 2 * SPEED;
      newAsteroid.radius = RADIUS - Math.random() * RADIUS_VARIATION;
      newAsteroid.mass = newAsteroid.radius * newAsteroid.radius;
      newAsteroid.orientation = Math.random() * Math.PI * 2;
      newAsteroid.rotation = MAX_ROTATION - 2 * Math.random() * MAX_ROTATION;
      return newAsteroid;
    };
    magnitude = function(dx, dy) {
      var r;
      return r = Math.sqrt(dx * dx + dy * dy);
    };
    return AsteroidHandler;
  });

}).call(this);
